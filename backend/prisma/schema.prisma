// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ProductList {
  id    Int    @id @default(autoincrement())
  name  String // name String
  unit  String // quantity
  price String // price decimal
}

model User {
  id              Int       @id @default(autoincrement())
  firstname       String    @unique
  lastname        String
  phonenumber     String    @unique
  password        String
  confirmpassword String
  email           String    @unique
  isAdmin         Boolean   @default(false)
  cart            Cart[]
  products        Product[]
}

model Product {
  id       Int        @id @default(autoincrement())
  name     String
  weight   Decimal    @default(10.2)
  price    Decimal    @default(10.2)
  isActive Boolean    @default(true)
  userId   Int // เพิ่ม userId เชื่อมกับ ตาราง User
  user     User       @relation(fields: [userId], references: [id])
  cartItem CartItem[]
}

model Cart {
  id        Int         @id @default(autoincrement())
  userId    Int
  createdAt DateTime    @default(now())
  user      User        @relation(fields: [userId], references: [id])
  taskOrder TaskOrder[]
  cartItem  CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  productId Int
  cartId    Int
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  cart      Cart    @relation(fields: [cartId], references: [id])
}

model TaskOrder {
  id         Int         @id @default(autoincrement())
  cartId     Int
  createdAt  DateTime    @default(now())
  pickupTime DateTime?
  updatedAt  DateTime    @updatedAt
  status     OrderStatus
  address    String
  cart       Cart        @relation(fields: [cartId], references: [id])
}

enum OrderStatus {
  PENDING
  SUCCESS
}
